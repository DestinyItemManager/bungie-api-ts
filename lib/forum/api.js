/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.8.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-ts code generator program.
 * https://github.com/DestinyItemManager/bungie-api-ts
 * Do not edit these files manually.
 */
/** Get topics from any forum. */
export function getTopicsPaged(http, params) {
    return http({
        method: 'GET',
        url: "https://www.bungie.net/Platform/Forum/GetTopicsPaged/" + params.page + "/" + params.pageSize + "/" + params.group + "/" + params.sort + "/" + params.quickDate + "/" + params.categoryFilter + "/",
        params: {
            locales: params.locales,
            tagstring: params.tagstring
        }
    });
}
/** Gets a listing of all topics marked as part of the core group. */
export function getCoreTopicsPaged(http, params) {
    return http({
        method: 'GET',
        url: "https://www.bungie.net/Platform/Forum/GetCoreTopicsPaged/" + params.page + "/" + params.sort + "/" + params.quickDate + "/" + params.categoryFilter + "/",
        params: {
            locales: params.locales
        }
    });
}
/**
 * Returns a thread of posts at the given parent, optionally returning replies to
 * those posts as well as the original parent.
 */
export function getPostsThreadedPaged(http, params) {
    return http({
        method: 'GET',
        url: "https://www.bungie.net/Platform/Forum/GetPostsThreadedPaged/" + params.parentPostId + "/" + params.page + "/" + params.pageSize + "/" + params.replySize + "/" + params.getParentPost + "/" + params.rootThreadMode + "/" + params.sortMode + "/",
        params: {
            showbanned: params.showbanned
        }
    });
}
/**
 * Returns a thread of posts starting at the topicId of the input childPostId,
 * optionally returning replies to those posts as well as the original parent.
 */
export function getPostsThreadedPagedFromChild(http, params) {
    return http({
        method: 'GET',
        url: "https://www.bungie.net/Platform/Forum/GetPostsThreadedPagedFromChild/" + params.childPostId + "/" + params.page + "/" + params.pageSize + "/" + params.replySize + "/" + params.rootThreadMode + "/" + params.sortMode + "/",
        params: {
            showbanned: params.showbanned
        }
    });
}
/** Returns the post specified and its immediate parent. */
export function getPostAndParent(http, params) {
    return http({
        method: 'GET',
        url: "https://www.bungie.net/Platform/Forum/GetPostAndParent/" + params.childPostId + "/",
        params: {
            showbanned: params.showbanned
        }
    });
}
/**
 * Returns the post specified and its immediate parent of posts that are awaiting
 * approval.
 */
export function getPostAndParentAwaitingApproval(http, params) {
    return http({
        method: 'GET',
        url: "https://www.bungie.net/Platform/Forum/GetPostAndParentAwaitingApproval/" + params.childPostId + "/",
        params: {
            showbanned: params.showbanned
        }
    });
}
/** Gets the post Id for the given content item's comments, if it exists. */
export function getTopicForContent(http, params) {
    return http({
        method: 'GET',
        url: "https://www.bungie.net/Platform/Forum/GetTopicForContent/" + params.contentId + "/"
    });
}
/**
 * Gets tag suggestions based on partial text entry, matching them with other tags
 * previously used in the forums.
 */
export function getForumTagSuggestions(http, params) {
    return http({
        method: 'GET',
        url: 'https://www.bungie.net/Platform/Forum/GetForumTagSuggestions/',
        params: {
            partialtag: params.partialtag
        }
    });
}
/** Gets the specified forum poll. */
export function getPoll(http, params) {
    return http({
        method: 'GET',
        url: "https://www.bungie.net/Platform/Forum/Poll/" + params.topicId + "/"
    });
}
/**
 * Allows the caller to get a list of to 25 recruitment thread summary information
 * objects.
 */
export function getRecruitmentThreadSummaries(http, body) {
    return http({
        method: 'POST',
        url: 'https://www.bungie.net/Platform/Forum/Recruit/Summaries/',
        body: body
    });
}
