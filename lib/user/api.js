"use strict";
/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.1
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-ts code generator program.
 * https://github.com/DestinyItemManager/bugie-api-ts
 * Do not edit these files manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/** Loads a bungienet user by membership id. */
function getBungieNetUserById(http, params) {
    return http({
        method: 'GET',
        url: "https://www.bungie.net/Platform/User/GetBungieNetUserById/" + params.id + "/"
    });
}
exports.getBungieNetUserById = getBungieNetUserById;
/** Returns a list of possible users based on the search string */
function searchUsers(http, params) {
    return http({
        method: 'GET',
        url: 'https://www.bungie.net/Platform/User/SearchUsers/',
        params: {
            q: params.q
        }
    });
}
exports.searchUsers = searchUsers;
/** Returns a list of all available user themes. */
function getAvailableThemes(http) {
    return http({
        method: 'GET',
        url: 'https://www.bungie.net/Platform/User/GetAvailableThemes/'
    });
}
exports.getAvailableThemes = getAvailableThemes;
/**
 * Returns a list of accounts associated with the supplied membership ID and
 * membership type. This will include all linked accounts (even when hidden) if
 * supplied credentials permit it.
 */
function getMembershipDataById(http, params) {
    return http({
        method: 'GET',
        url: "https://www.bungie.net/Platform/User/GetMembershipsById/" + params.membershipId + "/" + params.membershipType + "/"
    });
}
exports.getMembershipDataById = getMembershipDataById;
/**
 * Returns a list of accounts associated with signed in user. This is useful for
 * OAuth implementations that do not give you access to the token response.
 */
function getMembershipDataForCurrentUser(http) {
    return http({
        method: 'GET',
        url: 'https://www.bungie.net/Platform/User/GetMembershipsForCurrentUser/'
    });
}
exports.getMembershipDataForCurrentUser = getMembershipDataForCurrentUser;
/** Returns a user's linked Partnerships. */
function getPartnerships(http, params) {
    return http({
        method: 'GET',
        url: "https://www.bungie.net/Platform/User/" + params.membershipId + "/Partnerships/"
    });
}
exports.getPartnerships = getPartnerships;
